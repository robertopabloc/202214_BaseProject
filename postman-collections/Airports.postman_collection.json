{
	"info": {
		"_postman_id": "57029a43-ee91-4810-9d50-2ddc9a0d3a2a",
		"name": "Airports",
		"description": "Documentation for the resource Airport",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17185062"
	},
	"item": [
		{
			"name": "Add an airport",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"airport_id\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"El Dorado\",\n    \"code\": 1931,\n    \"country\": \"Colombia\",\n    \"city\": \"Bogotá\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Add an airport",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"El Dorado\",\n    \"code\": 1931,\n    \"country\": \"Colombia\",\n    \"city\": \"Bogotá\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "//airports",
							"path": [
								"",
								"airports"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"14f05d0e-1275-11ed-861d-0242ac120032\",\n    \"name\": \"El Dorado\",\n    \"code\": 1931,\n    \"country\": \"Colombia\",\n    \"city\": \"Bogotá\"\n}"
				}
			]
		},
		{
			"name": "Add an invalid airport",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"code\": 1931,\n    \"country\": \"Colombia\",\n    \"city\": \"Bogotá\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Add an invalid airport",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code\": 1931,\n    \"country\": \"Colombia\",\n    \"city\": \"Bogotá\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n   \"statusCode\": 400,\n   \"message\": \"Invalid name for airport\"\n}"
				}
			]
		},
		{
			"name": "Get all airports",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of airports > ' + 0, function () {",
							"   var data = pm.response.json()",
							"   pm.expect(data.length).to.greaterThan(0)",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Get all airports",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "[\n   {\n        \"id\": \"14f05d0e-1275-11ed-861d-0242ac120032\",\n        \"name\": \"El Dorado\",\n        \"code\": 1931,\n        \"country\": \"Colombia\",\n        \"city\": \"Bogotá\",\n        \"airlines\": [\n           {\n            \"name\": \"Avianca\",\n            \"description\": \"Linea Aérea Nacional de Colombia, propiedad de la sociedad británica​ Avianca Group. Fundada en 1919 bajo el nombre de SCADTA, es la segunda aerolínea existente más antigua del mundo tras KLM, la cual fue fundada solo 58 días antes, y la más antigua a nivel mundial con operaciones ininterrumpidas\",\n            \"fundationDate\": \"05-12-1919\",\n            \"website\": \"https://www.avianca.com/\"\n           },\n           {\n               \"id\": \"14f05d0e-1275-11ed-861d-0242ac120032\",\n               \"name\": \"El Dorado 2\",\n               \"code\": 1931,\n               \"country\": \"Colombia\",\n               \"city\": \"Bogotá\"\n           }\n       ]\n    }\n]"
				}
			]
		},
		{
			"name": "Get one airport",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airports/{{airport_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports",
						"{{airport_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Get one airport",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airports/{{airport_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports",
								"{{airport_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "[\n   {\n        \"id\": \"14f05d0e-1275-11ed-861d-0242ac120032\",\n        \"name\": \"El Dorado\",\n        \"code\": 1931,\n        \"country\": \"Colombia\",\n        \"city\": \"Bogotá\",\n        \"airlines\": [\n           {\n            \"name\": \"Avianca\",\n            \"description\": \"Linea Aérea Nacional de Colombia, propiedad de la sociedad británica​ Avianca Group. Fundada en 1919 bajo el nombre de SCADTA, es la segunda aerolínea existente más antigua del mundo tras KLM, la cual fue fundada solo 58 días antes, y la más antigua a nivel mundial con operaciones ininterrumpidas\",\n            \"fundationDate\": \"05-12-1919\",\n            \"website\": \"https://www.avianca.com/\"\n           },\n           {\n               \"id\": \"14f05d0e-1275-11ed-861d-0242ac120032\",\n               \"name\": \"El Dorado 2\",\n               \"code\": 1931,\n               \"country\": \"Colombia\",\n               \"city\": \"Bogotá\"\n           }\n       ]\n    }\n]"
				}
			]
		},
		{
			"name": "Get an invalid airport",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airport/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airport",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Get an invalid airport",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airport/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airport",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Update an airport",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Aeropuerto Internacional El Dorado\",\n    \"code\": 1926,\n    \"country\": \"Colombia\",\n    \"city\": \"Bogotá\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airports/{{airport_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports",
						"{{airport_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Update an airport",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airports/{{airport_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports",
								"{{airport_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "[\n   {\n        \"id\": \"14f05d0e-1275-11ed-861d-0242ac120032\",\n        \"name\": \"Aeropuerto Internacional El Dorado\",\n        \"code\": 1926,\n        \"country\": \"Colombia\",\n        \"city\": \"Bogotá\",\n        \"airlines\": [\n           {\n            \"name\": \"Avianca\",\n            \"description\": \"Linea Aérea Nacional de Colombia, propiedad de la sociedad británica​ Avianca Group. Fundada en 1919 bajo el nombre de SCADTA, es la segunda aerolínea existente más antigua del mundo tras KLM, la cual fue fundada solo 58 días antes, y la más antigua a nivel mundial con operaciones ininterrumpidas\",\n            \"fundationDate\": \"05-12-1919\",\n            \"website\": \"https://www.avianca.com/\"\n           },\n           {\n               \"id\": \"14f05d0e-1275-11ed-861d-0242ac120032\",\n               \"name\": \"El Dorado 2\",\n               \"code\": 1931,\n               \"country\": \"Colombia\",\n               \"city\": \"Bogotá\"\n           }\n       ]\n    }\n]"
				}
			]
		},
		{
			"name": "Update an invalid airport",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airport/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airport",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Update an invalid airport",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airport/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airport",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete an airport",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airports/{{airport_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports",
						"{{airport_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete an airport",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airports/{{airport_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports",
								"{{airport_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete an invalid airport",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airport/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airport",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Delete an invalid airport",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airport/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airport",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n   \"statusCode\": 404,\n   \"message\": \"The airport with the given id was not found\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "X-Api-Key",
				"type": "string"
			},
			{
				"key": "value",
				"value": "<API Key>",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "/",
			"type": "string"
		}
	]
}